\password postgres
\conninfo
pwd
\q
CREATE USER replica REPLICATION LOGIN ENCRYPTED PASSWORD 'aqwe123@';
\du
\q
create database test;
CREATE USER test  LOGIN ENCRYPTED PASSWORD 'aqwe123@';
\du
show databases;
\password
psql
\conninfo
select version();
show all;
\dt
\q
\d pg_stat_bgwriter
pwd]q
\q
show all;
exit
\q
\l
\q
\l
use northwind;
SELECT * FROM pg_catalog.pg_tables;
\dt
select * from sbtest;
select * from pgbench_accounts ;
select * from pgbench_accounts ;
select * from pgbench_history;
\q
\dt
select * from categories;
select * from customer_customer_demo;
select * from employees;
select * from us_statesl;
select * from us_states;
clearexit
\q
\dt
select * from pgbench_branches;
select * from pgbench_history;
select * from pgbench_accounts;
\q
show parameter shared_buffers;
show shared_buffers;
exit]q
\q
\dt
\db
\t
\c northwind
\dt
\q
show all;
select * from pg_statio_user_tables;
\q
pg_activity;
\q
show shared_buffers;
show work_mem;
show maintaince_work_mem;
show min_wal_size;
show max_wal_size;
show autovacuum_max_workers;
set work_mem to "256MB";
show work_mem;
set shared_buffers to "256MB";
\q
show shared_buffersl;
show shared_buffers;
set shared_buffers to "256MB";
\q
alter system set shared_buffers to '256MB';
show shared_buffers;
show shared_buffers;
show shared_buffers;
show shared_buffers;
\q
select *  from pg_statio_user_indexes;
\c sbtest;
select *  from pg_statio_user_indexes;
select *  from pg_stat_bgwriter;
\q
show max_mem;
show work_mem;
show bgwriter_delay;
\q
\c sbtest;
select * from pg_statio_user_tablesl;
select * from pg_statio_user_tables;
select * from pg_stat_user_tables;
\q
\q
\q
\l
dropdb resultsdropdb pgbench;
drop database pgbench;
drop database results;
]q
\q
create database results;
create database pgbench;
\q
select pgperf.create_snapshot(4);
select * from pgperf.snapshot();
\q
select * from  pgperf.snapshot;
select pgperf.create_snapshot(4);
select pgperf.create_snapshot();
select pgperf.create_snapshot(2);
\q
select pgperf.create_snapshot(4);
\c sbtest
select pgperf.create_snapshot(4);
\dt
select pgperf.create_snapshot(5);
\q
\c sbtest
select pgperf.create_snapshot(4);
select * from pgperf.snapshot;
select * from pgperf.snapshot_pg_stat_user_indexes;
select * from pgperf.snapshot_pg_stat_user_indexes;
select pgperf.create_snapshot(5);
select * from pgperf.snapshot_pg_stat_user_indexes;
\q
\c sbtest
\dt
select pgperf.create_sanpshot(4);
select pgperf.create_snapshot(4);
select * from pgperf.snapshot();
select * from pgperf.snapshot;
select * from pgperf.snapshot_pg_stat_user_tables;
\q
select pgpref.create_snapshot(4);
\c sbtest
select pgpref.create_snapshot(4);
select pgperf.create_snapshot(4);
select pgperf.create_snapshot(4);
select * from pgperf.snapshot;
\q
show shared_buffers;
alter system set shared_buffers='128MB';
\q
\d
\dt
\q
\d sbtest
\c sbtest
\d pg_statio_user_tables
\q
\d sbtest
\c sbtest
alter  pgperf.pg_stat_settings_collections add column work_mem varchar, add column maintenance_work_mem varchar;
alter pg_stat_settings_collections add column work_mem varchar, add column maintenance_work_mem varchar;
alter table pgperf.pg_stat_settings_collections add column work_mem varchar, add column maintenance_work_mem varchar;
alter table pgperf.pg_stat_settings_collections add column max_wal_size varchar, add column min_wal_size  varchar;
select * from pgperf.pg_stat_settings_collections;
update pgperf.pg_stat_settings_collections set work_mem=(select current_setting('work_mem'));
update pgperf.pg_stat_settings_collections set maintenance_work_mem=(select current_setting('maintenance_work_mem'));
update pgperf.pg_stat_settings_collections set max_wal_size=(select current_setting('max_wal_size'));
update pgperf.pg_stat_settings_collections set min_wal_size=(select current_setting('min_wal_size'));
select * from pgperf.pg_stat_settings_collections;
\dt pgperf.*
select top 10 * from pgperf.snapshot_pg_stat_user_indexes;
select  * from pgperf.snapshot_pg_stat_user_indexes;
\dt pgperf.snapshot_pg_stat_user_indexes
\q
\c sbtest
\dt pgperf.*
\dt+ snapshot_pg_stat_database_conflicts
\dt+ pgperf.snapshot_pg_stat_database_conflicts
\dt+ pgperf.snapshot_pg_stat_user_indexes
\d+ pgperf.snapshot_pg_stat_user_indexes
\d+ pgperf.snapshot_pg_stat_user_indexes
\d+ snapshot_pg_stat_database_conflicts;
\d+ snapshot_pg_statio_user_tables;
\d+ pgperf.snapshot_pg_statio_user_tables;
\d+ pgperf.snapshot_pg_stat_user_tables
\q
\c sbtest
\dt pgperf.*
\dt+ snapshot_pg_stat_user_tables
\dt+ pgperf.snapshot_pg_stat_user_tables
\d+ pgperf.snapshot_pg_stat_user_tables
select * from pgperf.snapshot_pg_stat_user_tables limit 5;
select * from snapshot_pg_statio_user_tables limit 10;
select * from pgperf.snapshot_pg_statio_user_tables limit 10;
\d+ pgperf.pg_stat_settongs_collections;
\d+ pgperf.pg_stat_settongs_collections
\d+ pgperf.pg_stat_settings_collections
select a.shared_buffers,a.work_mem, b.relid,b.relname,b.idx_scan,b.idx_tup_fetch,b.n_tup_ins,b.tup_upd,b.n_tup_hot_upd,b.n_tup_del,b.n_live_tup,b.n_dead_tup from pgperf.pg_stat_settings_collections a , pgperf.snapshot_pg_stat_user_tables b where a.sid=b.sid limit 10;
select a.shared_buffers,a.work_mem, b.relid,b.relname,b.idx_scan,b.idx_tup_fetch,b.n_tup_ins,b.n_tup_upd,b.n_tup_hot_upd,b.n_tup_del,b.n_live_tup,b.n_dead_tup from pgperf.pg_stat_settings_collections a , pgperf.snapshot_pg_stat_user_tables b where a.sid=b.sid limit 10;
copy(select a.shared_buffers,a.work_mem, b.relid,b.relname,b.idx_scan,b.idx_tup_fetch,b.n_tup_ins,b.n_tup_upd,b.n_tup_hot_upd,b.n_tup_del,b.n_live_tup,b.n_dead_tup from pgperf.pg_stat_settings_collections a , pgperf.snapshot_pg_stat_user_tables b where a.sid=b.sid limit 10;) to '/tmp/snapshot_pg_stat_user_tables.csv' CSV HEADER
\q
copy(select a.shared_buffers,a.work_mem, b.relid,b.relname,b.idx_scan,b.idx_tup_fetch,b.n_tup_ins,b.n_tup_upd,b.n_tup_hot_upd,b.n_tup_del,b.n_live_tup,b.n_dead_tup from pgperf.pg_stat_settings_collections a , pgperf.snapshot_pg_stat_user_tables b where a.sid=b.sid) to '/tmp/snapshot_pg_stat_user_tables.csv' CSV HEADER
\q
selectsubstring(a.shared_buffers,1,(len('a.shared_buffers')-1)) as shared_buffers,#a.shared_buffers,#a.work_mem, substring(a.work_mem,1,(len('a.work_mem')-1)) as work_mem,b.relid,b.relname,b.idx_scan,b.idx_tup_fetch,b.n_tup_ins,b.n_tup_upd,b.n_tup_hot_upd,b.n_tup_del,b.n_live_tup,b.n_dead_tup from pgperf.pg_stat_settings_collections a ,  pgperf.snapshot_pg_stat_user_tables b where a.sid=b.sid limit 10;
\q
select * from pg_stat_replication;
select * from pg_stat_replication;
select * from pg_stat_replication;
\dt pgperf.*;
select * from pg_stat_replication;
select * from pg_stat_replication;
\q
select * from pg_stat_replication;
\q
\dt pgperf.*
select * from pgperf.pg_stat_settings_collections limit 1;
select * from pgperf.pg_stat_settings_collections where sid=0;;
\q
select * from pg_stat_replication;
select * from pg_stat_replication;
show max_connections;
select * from pg_stat_replication;
select * from pg_stat_replication;
select * from pg_stat_replication;
select * from pg_stat_replication;
\q
